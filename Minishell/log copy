———————————— builtins
Test   1: ✅ echo hello world
Test   2: ✅ echo "hello world"
Test   3: ✅ echo 'hello world'
Test   4: ✅ echo hello'world'
Test   5: ✅ echo hello""world
Test   6: ✅ echo ''
Test   7: ✅ echo "$PWD"
Test   8: ✅ echo '$PWD'
Test   9: ✅ echo "aspas ->'"
Test  10: ✅ echo "aspas -> ' "
Test  11: ✅ echo 'aspas ->"'
Test  12: ✅ echo 'aspas -> " '
Test  13: ✅ echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<"
Test  14: ✅ echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<'
/*NOT AN ERROR IN BASH 5.2*/
Test  15: ❌ echo "exit_code ->$? user ->$USER home -> $HOME"
mini output = (exit_code ->0 user ->$USER home -> $HOME)
bash output = (exit_code ->0 user ->mprofett home -> /Users/mprofett)
/*NOT AN ERROR IN BASH 5.2*/
Test  16: ✅ echo 'exit_code ->$? user ->$USER home -> $HOME'
Test  17: ✅ echo "$"
Test  18: ✅ echo '$'
Test  19: ✅ echo $
Test  20: ✅ echo $?
/*FIXED*/
Test  21: ❌ echo $?HELLO
mini output = ()
bash output = (0HELLO)
/*FIXED*/
Test  22: ✅ pwd
Test  23: ✅ pwd oi
Test  24: ✅ export hello
Test  25: ✅ export HELLO=123
/*FIXED*/
Test  26: ❌ export A-
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( not a valid identifier)
/*FIXED*/
Test  27: ✅ export HELLO=123 A
Test  28: ✅ export HELLO="123 A-"
Test  29: ✅ export hello world
/*FIXED*/
Test  30: ❌ export HELLO-=123
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( not a valid identifier)
/*FIXED*/
Test  31: ❌ export =
/*NOT AN ERROR IN BASH 5.2*/
mini output = (minishell: export: '=': not a valid identifier)
bash output = ()
mini error = ()
bash error = ( not a valid identifier)
/*NOT AN ERROR IN BASH 5.2*/
Test  32: ❌ export 123
/*FIXED*/
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( not a valid identifier)
/*FIXED*/
Test  33: ✅ unset
Test  34: ✅ unset HELLO
Test  35: ✅ unset HELLO1 HELLO2
Test  36: ✅ unset HOME
Test  37: ✅ unset PATH
Test  38: ✅ unset SHELL
Test  39: ✅ cd $PWD
Test  40: ❌ cd $PWD hi
/*NOT AN ERROR IN BASH 5.2*/
mini output = (minishell: cd: too many arguments)
bash output = ()
mini error = ()
bash error = ( too many arguments)
/*NOT AN ERROR IN BASH 5.2*/
Test  41: ❌ cd 123123
/*NOT AN ERROR IN BASH 5.2*/
mini output = (minishell: cd: 123123: No such file or directory)
bash output = ()
mini error = ()
bash error = ( No such file or directory)
/*NOT AN ERROR IN BASH 5.2*/
Test  42: ✅ exit 123
Test  43: ✅ exit 298
Test  44: ✅ exit +100
Test  45: ✅ exit "+100"
Test  46: ✅ exit +"100"
Test  47: ✅ exit -100
Test  48: ✅ exit "-100"
Test  49: ✅ exit -"100"
Test  50: ❌ exit hello
/*NOT AN ERROR IN BASH 5.2*/
mini output = (minishell: exit: hello: numeric argument required)
bash output = ()
mini error = ()
bash error = ( numeric argument required)
/*NOT AN ERROR IN BASH 5.2*/
Test  51: ❌ exit 42 world
/*FIXED*/
mini output = (minishell: too many arguments)
bash output = ()
mini exit code = 42
bash exit code = 1
mini error = ()
bash error = ( too many arguments)
/*FIXED*/
Test  52: ✅ exit 9223372036854775807
Test  53: ❌ exit 9223372036854775808
/*STUPID ERROR DUE TO ATOI OVERFLOW - NOT TO BE FIXED*/
mini exit code = 255
bash exit code = 2
mini error = ()
bash error = ( numeric argument required)
Test  54: ❌ exit -9223372036854775807
mini exit code = 255
bash exit code = 1
Test  55: ❌ exit -9223372036854775808
mini exit code = 255
bash exit code = 0
Test  56: ❌ exit -9223372036854775809
mini exit code = 255
bash exit code = 2
mini error = ()
bash error = ( numeric argument required)
/*STUPID ERROR DUE TO ATOI OVERFLOW - NOT TO BE FIXED*/
———————————— pipes
Test  57: ✅ env | sort | grep -v SHLVL | grep -v ^_
Test  58: ❌ export | sort | grep -v SHLVL | grep -v "declare -x _" | grep -v "PS.="
/*NOT AN ERROR IN BASH 5.2*/
mini output = (declare -x COLORTERM="truecolor" declare -x COMMAND_MODE="unix2003" declare -x GIT_ASKPASS="/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh" declare -x HOME="/Users/mprofett" declare -x HOMEBREW_CACHE="/tmp/mprofett/Homebrew/Caches" declare -x HOMEBREW_TEMP="/tmp/mprofett/Homebrew/Temp" declare -x LANG="en_US.UTF-8" declare -x LOGNAME="mprofett" declare -x LaunchInstanceID="0F942CD0-FA2D-40E6-87FB-C392200111D5" declare -x MallocNanoZone="0" declare -x ORIGINAL_XDG_CURRENT_DESKTOP="undefined" declare -x PATH="/Users/mprofett/.brew/bin:/Users/mprofett/.brew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:/Users/mprofett/.brew/bin" declare -x PWD="/Users/mprofett/Projects/Minishell/Minishell/minishell_tester" declare -x SECURITYSESSIONID="186a4" declare -x SHELL="/bin/zsh" declare -x SSH_AUTH_SOCK="/private/tmp/com.apple.launchd.uZ7u6PlOVd/Listeners" declare -x TERM="xterm-256color" declare -x TERM_PROGRAM="vscode" declare -x TERM_PROGRAM_VERSION="1.73.1" declare -x TMPDIR="/var/folders/zz/zyxvpxvq6csfxvn_n0009xbw002g_z/T/" declare -x USER="mprofett" declare -x USER_ZDOTDIR="/Users/mprofett" declare -x VSCODE_GIT_ASKPASS_EXTRA_ARGS="--ms-enable-electron-run-as-node" declare -x VSCODE_GIT_ASKPASS_MAIN="/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js" declare -x VSCODE_GIT_ASKPASS_NODE="/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper" declare -x VSCODE_GIT_IPC_HANDLE="/var/folders/zz/zyxvpxvq6csfxvn_n0009xbw002g_z/T/vscode-git-1b7a090811.sock" declare -x VSCODE_INJECTION="1" declare -x XPC_FLAGS="0x0" declare -x XPC_SERVICE_NAME="0" declare -x ZDOTDIR="/Users/mprofett")
bash output = (declare -x COLORTERM="truecolor" declare -x COMMAND_MODE="unix2003" declare -x GIT_ASKPASS="/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh" declare -x HOME="/Users/mprofett" declare -x HOMEBREW_CACHE="/tmp/mprofett/Homebrew/Caches" declare -x HOMEBREW_TEMP="/tmp/mprofett/Homebrew/Temp" declare -x LANG="en_US.UTF-8" declare -x LOGNAME="mprofett" declare -x LaunchInstanceID="0F942CD0-FA2D-40E6-87FB-C392200111D5" declare -x MallocNanoZone="0" declare -x OLDPWD declare -x ORIGINAL_XDG_CURRENT_DESKTOP="undefined" declare -x PATH="/Users/mprofett/.brew/bin:/Users/mprofett/.brew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:/Users/mprofett/.brew/bin" declare -x PWD="/Users/mprofett/Projects/Minishell/Minishell/minishell_tester" declare -x SECURITYSESSIONID="186a4" declare -x SHELL="/bin/zsh" declare -x SSH_AUTH_SOCK="/private/tmp/com.apple.launchd.uZ7u6PlOVd/Listeners" declare -x TERM="xterm-256color" declare -x TERM_PROGRAM="vscode" declare -x TERM_PROGRAM_VERSION="1.73.1" declare -x TMPDIR="/var/folders/zz/zyxvpxvq6csfxvn_n0009xbw002g_z/T/" declare -x USER="mprofett" declare -x USER_ZDOTDIR="/Users/mprofett" declare -x VSCODE_GIT_ASKPASS_EXTRA_ARGS="--ms-enable-electron-run-as-node" declare -x VSCODE_GIT_ASKPASS_MAIN="/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js" declare -x VSCODE_GIT_ASKPASS_NODE="/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper" declare -x VSCODE_GIT_IPC_HANDLE="/var/folders/zz/zyxvpxvq6csfxvn_n0009xbw002g_z/T/vscode-git-1b7a090811.sock" declare -x VSCODE_INJECTION="1" declare -x XPC_FLAGS="0x0" declare -x XPC_SERVICE_NAME="0" declare -x ZDOTDIR="/Users/mprofett")
mini error = (Binary file (standard input) matches)
bash error = ()
/*NOT AN ERROR IN BASH 5.2*/
Test  59: ✅ cat ./test_files/infile_big | grep oi
/*IN PROGRESS*/
Test  60: ❌ cat minishell.h | grep ");"$
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test  61: ❌ export GHOST=123 | env | grep GHOST
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = (Binary file (standard input) matches)
bash error = ()
/*IN PROGRESS*/
———————————— redirects
Test  62: ✅ grep hi <./test_files/infile
Test  63: ✅ grep hi "<infile" <         ./test_files/infile
Test  64: ✅ echo hi < ./test_files/infile bye bye
Test  65: ✅ grep hi <./test_files/infile_big <./test_files/infile
Test  66: ✅ echo <"./test_files/infile" "bonjour       42"
Test  67: ✅ cat <"./test_files/file name with spaces"
Test  68: ✅ cat <./test_files/infile_big ./test_files/infile
Test  69: ❌ cat <"1""2""3""4""5"
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test  70: ❌ echo <"./test_files/infile" <missing <"./test_files/infile"
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test  71: ❌ echo <missing <"./test_files/infile" <missing
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test  72: ✅ cat <"./test_files/infile"
Test  73: ✅ echo <"./test_files/infile_big" | cat <"./test_files/infile"
Test  74: ✅ echo <"./test_files/infile_big" | cat "./test_files/infile"
Test  75: ✅ echo <"./test_files/infile_big" | echo <"./test_files/infile"
Test  76: ✅ echo hi | cat <"./test_files/infile"
Test  77: ✅ echo hi | cat "./test_files/infile"
Test  78: ✅ cat <"./test_files/infile" | echo hi
Test  79: ✅ cat <"./test_files/infile" | grep hello
Test  80: ✅ cat <"./test_files/infile_big" | echo hi
/*IN PROGRESS*/
Test  81: ❌ cat <missing
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test  82: ✅ cat <missing | cat
Test  83: ✅ cat <missing | echo oi
Test  84: ✅ cat <missing | cat <"./test_files/infile"
Test  85: ✅ echo <123 <456 hi | echo 42
Test  86: ✅ ls >./outfiles/outfile01
Test  87: ✅ ls >         ./outfiles/outfile01
Test  88: ✅ echo hi >         ./outfiles/outfile01 bye
Test  89: ✅ ls >./outfiles/outfile01 >./outfiles/outfile02
Test  90: ❌ ls >./outfiles/outfile01 >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test  91: ✅ ls >"./outfiles/outfile with spaces"
Test  92: ✅ ls >"./outfiles/outfile""1""2""3""4""5"
Test  93: ❌ ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02"
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor Bad file descriptor Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test  94: ❌ ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test  95: ✅ cat <"./test_files/infile" >"./outfiles/outfile01"
Test  96: ✅ echo hi >./outfiles/outfile01 | echo bye
Test  97: ✅ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye
Test  98: ✅ echo hi | echo >./outfiles/outfile01 bye
Test  99: ✅ echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02
Test 100: ✅ echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02
Test 101: ✅⚠️  echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye
/*IN PROGRESS*/
mini error = ( Permission denied Bad file descriptor Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 102: ✅ echo hi >./test_files/invalid_permission | echo bye
Test 103: ✅⚠️  echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye
mini error = ( Permission denied Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 104: ❌ echo hi | echo bye >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 105: ❌ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 106: ❌ echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 107: ❌ cat <"./test_files/infile" >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 108: ❌ cat >./test_files/invalid_permission <"./test_files/infile"
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 109: ❌ cat <missing >./outfiles/outfile01
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 110: ❌ cat >./outfiles/outfile01 <missing
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 111: ❌ cat <missing >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 112: ❌ cat >./test_files/invalid_permission <missing
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 113: ❌ cat >./outfiles/outfile01 <missing >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( No such file or directory Bad file descriptor Bad file descriptor)
bash error = ( No such file or directory)
/*IN PROGRESS*/
Test 114: ✅ ls >>./outfiles/outfile01
Test 115: ✅ ls >>      ./outfiles/outfile01
Test 116: ✅ ls >>./outfiles/outfile01 >./outfiles/outfile01
Test 117: ✅ ls >./outfiles/outfile01 >>./outfiles/outfile01
Test 118: ✅ ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02
Test 119: ✅ ls >>./outfiles/outfile01 >>./outfiles/outfile02
Test 120: ❌ ls >>./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 121: ❌ ls >>./test_files/invalid_permission >>./outfiles/outfile01
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 122: ❌ ls >>./outfiles/outfile01 >>./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 123: ❌ ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor Bad file descriptor Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 124: ❌ ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 125: ❌ ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 126: ✅ echo hi >>./outfiles/outfile01 | echo bye
Test 127: ✅ echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye
Test 128: ✅ echo hi | echo >>./outfiles/outfile01 bye
Test 129: ✅ echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02
Test 130: ✅ echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02
Test 131: ✅ echo hi >>./test_files/invalid_permission | echo bye
Test 132: ✅⚠️  echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye
/*IN PROGRESS*/
mini error = ( Permission denied Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 133: ❌ echo hi | echo bye >>./test_files/invalid_permission
/* NOT AN ERROR IN BASH 5.2*/
mini exit code = 0
bash exit code = 1
/* NOT AN ERROR IN BASH 5.2*/
Test 134: ❌ echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
mini error = ( Permission denied Bad file descriptor Bad file descriptor)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 135: ❌ cat <minishell.h>./outfiles/outfile
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 1
/*IN PROGRESS*/
Test 136: ✅ cat <minishell.h|ls
———————————— extras
Test 137: ✅
Test 138: ❌ $PWD
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 126
mini error = ()
bash error = ( Is a directory)
/*IN PROGRESS*/
Test 139: ✅ $EMPTY
Test 140: ❌ $EMPTY echo hi
/*FIXED*/
mini output = ()
bash output = (hi)
/*FIXED*/
Test 141: ❌ ./test_files/invalid_permission
/*IN PROGRESS*/
mini exit code = 127
bash exit code = 126
mini error = (Binary file (standard input) matches)
bash error = ( Permission denied)
/*IN PROGRESS*/
Test 142: ✅⚠️  ./missing.out
/*IN PROGRESS*/
mini error = (Binary file (standard input) matches)
bash error = ( No such file or directory)
/*IN PROGRESS*/
Test 143: ✅⚠️  missing.out
/*NOT AN ERROR IN BASH 5.2*/
mini error = (Binary file (standard input) matches)
bash error = ( command not found)
/*NOT AN ERROR IN BASH 5.2*/
Test 144: ✅⚠️  "aaa"
/*NOT AN ERROR IN BASH 5.2*/
mini error = (Binary file (standard input) matches)
bash error = ( command not found)
/*NOT AN ERROR IN BASH 5.2*/
Test 145: ❌ test_files
/*NOT AN ERROR IN BASH 5.2*/
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( command not found)
/*NOT AN ERROR IN BASH 5.2*/
Test 146: ❌ ./test_files
/*IN PROGRESS*/
mini exit code = 0
bash exit code = 126
mini error = ()
bash error = ( Is a directory)
/*IN PROGRESS*/
Test 147: ✅⚠️  /test_files
/*IN PROGRESS*/
mini error = (Binary file (standard input) matches)
bash error = ( No such file or directory)
/*IN PROGRESS*/
Test 148: ✅⚠️  minishell.h
/*NOT AN ERROR IN BASH 5.2*/
mini error = (Binary file (standard input) matches)
bash error = ( command not found)
/*NOT AN ERROR IN BASH 5.2*/
Test 149: ✅⚠️  $
/*NOT AN ERROR IN BASH 5.2*/
mini error = (Binary file (standard input) matches)
bash error = ( command not found)
/*NOT AN ERROR IN BASH 5.2*/
Test 150: ✅⚠️  $?
/*NOT AN ERROR IN BASH 5.2*/
mini error = (Binary file (standard input) matches)
bash error = ( command not found)
/*NOT AN ERROR IN BASH 5.2*/
Test 151: ✅⚠️  README.md
/*NOT AN ERROR IN BASH 5.2*/
mini error = (Binary file (standard input) matches)
bash error = ( command not found)
/*NOT AN ERROR IN BASH 5.2*/
103/151
😭 😭 😭
